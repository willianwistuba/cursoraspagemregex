CARACTERES E METACARACTERES - TABELA ASCII
! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ Ç ü é â ä à å ç ê ë è ï î ì Ä Å É æ Æ ô ö ò û ù ÿ Ö Ü ø £ Ø × ƒ á í ó ú ñ Ñ ª º ¿ ® ¬ ½ ¼ ¡ « » ¦ Á Â À © ¢ ¥ ã Ã ¤ ð Ð Ê Ë È Í Î Ï Ì Ó ß Ô Ò Õ Õ µ Þ Þ Ú Û Ù ý Ý ¯ ´ ± ¾ ¶ § ÷ ¸ ° ¨ · ¹ ² ³

TEXTOS TRABALHADOS EM AULA

1 - ÂNCORAS

O gato, caçador nato, correu
atrás do rato no mato,
assustou o pato,
tropeçou no sapato:
que falta de tato!

Rato fez de sapato o gato.
______________________________

2 - QUANTIFICADORES E ALTERNADORES

bp bep beep beeep beeeep beeeeep

______________________________

3 - CLASSES DE CARACTERES

! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~ Ç ü é â ä à å ç ê ë è ï î ì Ä Å É æ Æ ô ö ò û ù ÿ Ö Ü ø £ Ø × ƒ á í ó ú ñ Ñ ª º ¿ ® ¬ ½ ¼ ¡ « » ¦ Á Â À © ¢ ¥ ã Ã ¤ ð Ð Ê Ë È Í Î Ï Ì Ó ß Ô Ò Õ Õ µ Þ Þ Ú Û Ù ý Ý ¯ ´ ± ¾ ¶ § ÷ ¸ ° ¨ · ¹ ² ³

______________________________

4 - PARÊNTESES

2023/01/25
2023/08/13
2023/06/15
2023/03/19
2023/01/29
______________________________

5 - LOOKAROUND

REGEX POSITIVE LOOKBEHIND (Captura os nomes dos contatos): (?<=Titular: ).+
REGEX POSITIVE LOOKAHEAD (Captura os órgãos de contato): .+(?=\nTitular:)

Gabinete do Delegado-geral
Titular: Delegado José Darcy Santos Arruda
Telefone: (27) 3137-9089
E-mail: apoiogab@pc.es.gov.br

Academia de Polícia Civil (Acadepol)
Titular: Delegado Robson Alves Damasceno
Telefone: (27) 3132-1832
E-mail: acadepol@pc.es.gov.br

Superintendência da Tecnologia da Informação e Comunicação (SUTIC)
Titular: Delegado Ismael Forattini Peixoto de Lima
Telefone: (27) 3137-9061
E-mail: sutic@pc.es.gov.br

_________________________________________________
_________________________________________________
_________________________________________________

# EXERCÍCIOS DO CURSO DE RASPAGEM DE DADOS COM REGEX

Links para Exercícios

Plataforma para aplicação e testes de expressões regulares
https://regex101.com/
_________________________________________________
# Exercício 1 - Unificação de agendas
https://pc.es.gov.br/agenda-de-contatos
https://pm.es.gov.br/agenda-de-contatos
_________________________________________________
# Exercicio 2 - Coleta de dados folha de pagamento
https://transparencia.vitoria.es.gov.br/Pessoal.Servidor.Detalhes.aspx?ServidorID=3978&Exercicio=2021&periodo=tpJaneiro
_________________________________________________
# Exercicio 3 - Coleta de dados site Detran - ES
Download Editais
https://detran.es.gov.br/editais-de-notificacao-de-multa

Extensão para download em massa
https://chrome.google.com/webstore/detail/downthemall/nljkibfhlpcnanjgbnlnbjecgicbjkge

Manipulação de PDFs
https://www.ilovepdf.com/pt/juntar_pdf 

Regex
https://regex101.com/

Consulta Placa
https://www.keplaca.com/

_________________________________________________
# Raspagem em sites de notícia

Site para extrair as URLs
https://g1.globo.com/es/espirito-santo/

BULKDACHECKER -> Site para extrair links e abrir várias guias ao mesmo tempo
https://www.bulkdachecker.com/url-extractor/
https://www.bulkdachecker.com/open-multiple-url

URL Opener -> Site para abrir várias guias a partir de uma lista de URLs
https://url-opener.com/

FUNÇÃO PARA RODAR NO INSPETOR DE ELEMENTOS
https://github.com/willianwistuba/extracao_URLs_Inspetor_Elementos/blob/main/extractorLinks.js

Script em Python, no Google Colab, que ajuda no processo de mineração dos dados das URLs de pesquisa

-> https://colab.research.google.com/
_________________________________________________
# Raspagem no Facebook
	
	-> Raspagem de dados de perfis abertos
		
		-> Raspagem de lista de amigos
			-> perfil para testes:
				https://www.facebook.com/profile.php?id=100085754970356

			-> aplicar regex para extração das urls
      REGEX: https:\/\/www\.facebook\.com\/profile\.php\?id=\d+|(?<=href=")https:\/\/www\.facebook\.com\/.*?(?=" role="link")
			-> limpeza das duplicidades em planilha
			-> transferência para visualização em grafos (https://bcunha.pythonanywhere.com/rede/) 

		-> Raspagem de lista de fotos
			-> aplicar regex para extração das urls
      REGEX: https:\/\/www\.facebook\.com\/photo\.php\?fbid=\d+
		
		-> Raspagem de lista de videos
			-> aplicar regex para extração das urls
      REGEX: https:\/\/www\.facebook\.com\/\d+\/videos\/\d+
		
		-> Raspagem de lista de posts (usando o mbasic)
			-> Identificar ID numérico da conta
				-> Buscar por owner_id
			-> Aplicar regex no doc html da linha do tempo: (?<=top_level_post_id&quot;:&quot;)\d+
			-> Aplicar substituições até chegar no formato de link
				https://www.facebook.com/permalink.php?story_fbid=[IDPOST]&id=[IDPERFIL]
		
		-> Usando o Facebookscrapper
			https://sites.google.com/view/raspagem-de-dados-com-regex/facebook-scrapper

_________________________________________________
# Raspagem no Instagram

INSTAGRAM ID: F12 na página principal, inspecionar o arquivo JSON que contem "query_hash" no nome e buscar o ID

-> Raspagem de dados de perfis abertos
		
		-> Raspagem de lista de seguidores/seguindo
			-> perfil para testes:
				https://www.instagram.com/poesiasdorisadinha/
				
			-> pesquisa elemento pela classe ('aano'), copia elemento
			-> aplicar regex para extração dos nicknames
       REGEX: (?<=href="\/).*?(?=\/" role="link")
			-> limpeza das duplicidades em planilha
			-> transformar em links dos perfis (https://www.instagram.com/nicknames)
			-> transferência para visualização em grafos (https://bcunha.pythonanywhere.com/rede/) 

		-> Raspagem da lista de posts (usando aba Elements do Inspetor de Elementos)
			-> aplicar regex para extração das urls
      REGEX: (?<=href="\/p\/).*?(?=\/" role="link") ou pelo arquivo JSON '?count=12&max_id'
			-> limpeza das duplicidades em planilha
			-> elaboração da URL final (https://www.instagram.com/wbeduca/p/código)

		-> Raspagem da lista de reels (usando aba Elements)
			-> aplicar regex para extração das urls
      REGEX: (?<=href="\/reel\/).*?(?=\/" role="link") 
			-> limpeza das duplicidades em planilha
			-> elaboração da URL final (https://www.instagram.com/wbeduca/reel/código)
			
		-> Usando o InstagramScrapper
			https://sites.google.com/view/raspagem-de-dados-com-regex/instagram-scrapper

_________________________________________________
# Raspagem no Twitter

-> Raspagem de lista de seguidores/seguindo
			-> endereço para testes:
				-> https://twitter.com/WBEduca	
		
		-> Caso de poucos seguidores/seguindo -> Ctrl + A, Ctrl + C e regex para substituir
		
		-> Outros casos: F12 + Inspetor de Elementos -> olhar arquivos JSON de nome 'Following?variables...'
			Lista Regex:
				1 "screen_name": ".*?",|"followers_count": \d*,|"friends_count": \d*,|"location": ".*?"
				2 (?<="screen_name": ".*?",\n) + subst \n
				3 (?<=.)\n + subst \t	
		
		-> Raspagem de lista de tweets
			-> endereço para testes: https://twitter.com/EmersonWendt
			Lista Regex:
				1 "entryId": "tweet-\d*",|"full_text": ".*",| "reply_count":.*,|"retweet_count":.*,|"tweetDisplayType": ".*?",
				2 (?=\n"entryId": "tweet-\d*",) + subst \n
				3 (?<=.)\n + subst \t
				
		-> Usando o ScrapTwitter
			https://scraptwitter.vercel.app/
_____________________________________________________

-> Uso do Charles Proxy para facilitar a coleta de dados
			
			-> Comando do PowerShell para unir arquivos em um só: Get-Content **| Set-Content newfile.txt
			-> Comando do prompt para unir arquivos em um só: type * > newfile.txt

-> Raspagem da lista de posts (usando aba Elements)
			-> aplicar regex para extração das urls - (?<=href="\/p\/).*?(?=\/" role="link") ou pelo arquivo JSON '?count=12&max_id'
			-> limpeza das duplicidades em planilha
			-> elaboração da URL final (https://www.instagram.com/wbeduca/p/código)

-> Raspagem da lista de médicos do CFM
			-> https://portal.cfm.org.br/busca-medicos/

-> Raspagem lista licitações SABESP
			-> http://compraseletronicas.sabesp.com.br/sgl/home

_____________________________________________________

Criando expressões regulares para captura de dados comuns em documentos

Regex para capturar números de CPF (com formatação)
\d{3}\.\d{3}\.\d{3}-\d{2}

Exemplo: 123.456.789-11
_________________________________________________________
Regex para capturar números de CPF (sem formatação)
\d{11}

Exemplo: 12345678911
_________________________________________________________
Regex para capturar números de CNPJ (com formatação)
\d{2}\.\d{3}\.\d{3}\/\d{4}\-\d{2}

Exemplo: 12.345.678/0001-11
_________________________________________________________
Regex para capturar números de CNPJ (sem formatação)
\d{14}

Exemplo: 12345678000111
_________________________________________________________
Regex para capturar números de RG (com formatação)
\d{1,}\.\d{3}\.\d{3}-\d

Exemplo: 12.345.678-9
_________________________________________________________
Regex para capturar números de RG (sem formatação)
\d{8,9}

Exemplo: 123456789
_________________________________________________________
Regex para capturar números de CEP
\d{5}-\d{3}

Exemplo: 82540-000
_________________________________________________________

Regex para capturar números de celular (sem DDD)
\d{5}-\d{4}

Exemplo: 99888-1234
_________________________________________________________
Regex para capturar números de celular (com DDD)
\(\d{3}\)\s?\d{5}-\d{4}

Exemplo: (011) 99888-1234
_________________________________________________________
Regex para capturar números de tel fixo (sem DDD)
\d{4}-\d{4}

Exemplo: 4436-1234
_________________________________________________________
Regex para capturar números de tel fixo (com DDD)
\(\d{3}\)\s?\d{4}-\d{4}

Exemplo: (011) 4436-1234
_________________________________________________________
Regex para capturar número de cartão de crédito
\d{4}\s?\d{4}\s?\d{4}\s?\d{4}

Exemplo: 1234 1234 1234 1234 
_________________________________________________________
Regex para capturar número de passaporte
[a-zA-Z]{2}\d{6}

Exemplo: AA123456
_________________________________________________________
Regex para capturar número de Placa de Carro (padrão antigo)
[a-zA-Z]{3}\d{4}

Exemplo: ABC-1234
_________________________________________________________
Regex para capturar número de Placa de Carro (padrão Mercosul)
[a-zA-Z]{3}\d[a-zA-Z]\d{2}

Exemplo: ABC1A12
_________________________________________________________
Regex para capturar número de registro de carteira de motorista
\d{11}

Exemplo: 12345678911
_________________________________________________________
Regex para capturar endereços de email
[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}

Exemplos: fulano@exemplo.com, fulano@gmail.com, fulano@orgao.gov.br

Note que a expressão regular pode não capturar todos os endereços de email possíveis,
já que há muitas variações de formatação possíveis. Além disso, essa expressão regular
pode capturar alguns endereços de email inválidos ou inexistentes. Portanto, sempre é
recomendado fazer uma validação adicional dos endereços capturados por meio de outras
técnicas de programação.
_________________________________________________________
Regex para capturar URLs
\bhttps?:\/\/[^\s]+\b

Essa expressão regular deve capturar a maioria das URLs comuns, incluindo aquelas
com parâmetros, como http://www.exemplo.com/pagina.html?param1=valor1&param2=valor2.
No entanto, a expressão pode não capturar algumas URLs menos comuns ou que utilizem caracteres especiais. Note que essa expressão não captura URLs que não utilizem o protocolo http ou https.

Exemplos: https://www.google.com, http://example.com, https://www.github.com/ 
_________________________________________________________
Regex para capturar Agências e Contas Bancárias
\d{3,5}-?\d{0,2}

Note que essa expressão regular pode não capturar todas as possíveis variações de
números de conta bancária no Brasil. Alguns bancos e tipos de conta podem utilizar
formatos diferentes. Portanto, é sempre recomendado verificar as regras específicas
do banco em questão e testar a expressão regular com exemplos reais de números de
conta para garantir que ela esteja capturando corretamente os dados desejados.

Exemplo: 12345-6
_________________________________________________________
Regex para capturar Endereços de IP
^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$

Exemplos: 192.168.0.1, 10.0.0.1, 172.16.0.1
_________________________________________________________
Regex para capturar Endereços MAC
[0-9A-Fa-f]{2}([:-])[0-9A-Fa-f]{2}\1[0-9A-Fa-f]{2}\1[0-9A-Fa-f]{2}\1[0-9A-Fa-f]{2}\1[0-9A-Fa-f]{2}

Exemplos: 00:11:22:33:44:55, 00-11-22-33-44-55
_________________________________________________________
Regex para capturar Horários
([01]?[0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?

Exemplos: 09:30, 12:45:30, 23:59
_________________________________________________________
Regex para capturar nomes de arquivos
[\w\d\-_]+\.[\w\d]+

Exemplos: file.pdf, file.docx, file.xls

_________________________________________________________
Regex para capturar cifras (sem R$ na frente)
^\d{1,3}(.\d{3})*,\d{2}$

Exemplos: 0,01; 0,10; 1,00; 10,00; 100,00; 1.000,00
_________________________________________________________
Regex para capturar datas 
\d{2}\/\d{2}\/\d{4}

Exemplos: 01/01/2000; 16/09/2015
_________________________________________________________
Regex para capturar Números de PIS (Programa de Integração Social) do Brasil:
^\d{3}\.\d{5}\.\d{2}-\d{1}$

Exemplo: 123.45678.90-1
